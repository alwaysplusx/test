<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.moon.test.mybatis.repository.UserRepository">

	<resultMap type="org.moon.test.mybatis.persistence.User" id="UserGroupCountryMapper">
		<id column="id" property="id" />
		<result column="username" property="username" />
		<result column="password" property="password" />
		<result column="status" property="status" />
		<association property="group" column="groupId" javaType="org.moon.test.mybatis.persistence.Group">
			<id column="id" property="id" />
			<result column="groupName" property="groupName" />
		</association>
		<association property="country" column="countryId" javaType="org.moon.test.mybatis.persistence.Country" select="selectCountry" />
	</resultMap>
	
	<select id="selectCountry" resultType="org.moon.test.mybatis.persistence.Country" parameterType="long">
		select * from t_country where id = #{id}
	</select>
	
	<!-- 关联查询，由于Group association设置不同所以需要关联Group查询，而Country采用的方式不同，故在设计语句的时候可以省去 -->
	<select id="findUserByIdFetchGroup" parameterType="long" resultMap="UserGroupCountryMapper">
		select u.*,g.* from t_user u, t_group g where u.id = #{id} and u.groupId = g.id
	</select>

	<insert id="save" parameterType="org.moon.test.mybatis.persistence.User">
		insert into t_user(id, username, password, status, groupId, countryId, createTime, createUser)
		values (#{id},#{username},#{password},#{status},#{group.id}, #{country.id},#{createTime},#{createUser})
	</insert>
	
	<update id="delete" parameterType="long">
		delete from t_user where id = #{id}
	</update>

	<update id="update" parameterType="org.moon.test.mybatis.persistence.User">
		update t_user
		<set>
			<if test="username != null">username = #{username},</if>
			<if test="status != null">status = #{status},</if>
			<if test="password != null">password = #{password},</if>
			<if test="createTime != null">createTime = #{createTime},</if>
			<if test="createUser != null">createUser = #{createUser},</if>
		</set>
		where id = #{id}
	</update>
	
	<select id="findById" parameterType="long" resultType="org.moon.test.mybatis.persistence.User">
		select * from t_user u where id = #{id}
	</select>
	
	<select id="countAll" resultType="long">
		select count(*) from t_user
	</select>
	
	<update id="deleteAll">
		delete from t_user
	</update>
</mapper>